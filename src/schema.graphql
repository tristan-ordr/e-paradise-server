type Category {
    id: ID!,
    name: String!
    plants: [Plant!]
}

type Plant {
    id: ID!
    name: String!
    description: String
    image: String
    cost: String
    category: Category!
}


# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each. In this
# case, the "plants" query returns an array of zero or more Plants (defined above).
type Query {
    categories: [Category!]
    category(id: ID!): Category
    plants: [Plant!]
    plant(id: ID!): Plant
}

type Mutation {
    createCategory(name: String!): Category!
    deleteCategories(ids: [ID!]): [Category!]
    createPlant(plant: PlantInput!): Plant!
    updatePlant(id: ID!, edits: EditPlantInput!): Plant!
    deletePlant(id: ID!): [Plant!]
}

input PlantInput {
    name: String!
    description: String
    image: String
    cost: String
    category_id: ID!
}

input EditPlantInput {
    name: String
    description: String
    image: String
    cost: String
    category_id: ID
}